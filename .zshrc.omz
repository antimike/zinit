# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="clean"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" "spaceship" "avit")
ZSH_THEME_RANDOM_CANDIDATES+=( "sorin" )
ZSH_THEME_RANDOM_CANDIDATES+=( "fox" )
ZSH_THEME_RANDOM_CANDIDATES+=( "ys" )
ZSH_THEME_RANDOM_CANDIDATES+=( "lambda" )
ZSH_THEME_RANDOM_CANDIDATES+=( "fletcherm" )
ZSH_THEME_RANDOM_CANDIDATES+=( "wezm" )
ZSH_THEME_RANDOM_CANDIDATES+=( "nanotech" )
ZSH_THEME_RANDOM_CANDIDATES+=( "mira" )
ZSH_THEME_RANDOM_CANDIDATES+=( "dst" )
ZSH_THEME_RANDOM_CANDIDATES+=( "muse" )
ZSH_THEME_RANDOM_CANDIDATES+=( "mlh" )
ZSH_THEME_RANDOM_CANDIDATES+=( "tonotdo" )
ZSH_THEME_RANDOM_CANDIDATES+=( "cloud" )
ZSH_THEME_RANDOM_CANDIDATES+=( "cypher" )
ZSH_THEME_RANDOM_CANDIDATES+=( "candy" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
#DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse zsh-vi-mode)
# Add wisely, as too many plugins slow down shell startup.
plugins=(fzf fzf-tab vi-mode colorize copybuffer pip safe-paste sudo taskwarrior themes autojump colored-man-pages dotbare gitfast git-annex git extract asdf)
plugins+=(zsh-vi-mode)
plugins+=(dirhistory)
plugins+=(zsh-syntax-highlighting)

# Auto-generated completions
export GENCOMPL_FPATH=$ZSH/custom/functions/completion
source $ZSH/custom/plugins/zsh-completion-generator/zsh-completion-generator.plugin.zsh

# OMZ init script
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Necessary for ~/local-aliases.sh to work properly, as it relies on hisotry expanion
unsetopt HIST_VERIFY

# Allows use of Meta / Alt key.  See autoload fn zkbd
unsetopt MULTIBYTE

# This allows bypassing history logging by prepending a space to a command
# see man zshoptions
setopt HIST_IGNORE_SPACE

# source $SOURCE_DIR/forgit/forgit.plugin.zsh
eval "$(mcfly init zsh)"
source <(cod init $$ zsh)
# _dotbare_completion_cmd

# eval "$(fasd --init auto)"
# source "$SOURCE_DIR/fuzzy-fs/fuzzy-fs"
source /usr/share/autojump/autojump.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Make sure run-help works correctly
# TODO: Improve this with personalized run-help implementation
unalias run-help
autoload run-help

function zvm_after_init() {
  source $ZSH/plugins/fzf/fzf.plugin.zsh
  # TODO: Figure out what's wrong with the following line
  eval $(mcfly init zsh)
}

# Allows cd'ing to subdirs of ~ without qualifying the path
cdpath+=(~)

# Ensures parameter completions aren't considered when completing a command
zstyle ':completion:*:-command-:*' tag-order '!parameters'

# Configures "prefix completion" to be used as a "last resort" form of both normal and approximate completion
# Also configures _match completer, which uses globbing to generate completions
setopt complete_in_word     # Necessary for _prefix to work
zstyle ':completion:*' completer _complete _prefix:-complete _match _prefix:-match _approximate _prefix:-approximate
zstyle ':completion:*:prefix-complete:*' completer _complete
zstyle ':completion:*:prefix-approximate:*' completer _approximate
zstyle ':completion:*:prefix-match:*' completer _match

# Configure _all_matches completer and bind it to ^Xl
zle -C all-matches complete-word _generic
bindkey '^Xl' all-matches
zstyle ':completion:all-matches:*' completer _all_matches
zstyle ':completion:all-matches:*' old-matches only

# Include source information in completion listings
zstyle ':completion:*:descriptions' format '%BCompleting %d%b'

# Separate completion lists by group
zstyle ':completion:*' group-name ''    # Assigns each tag its own group
zstyle ':completion:*:-command-' group-order builtins functions commands

# Display option descriptions
zstyle ':completion:*' verbose true
zstyle ':completion:*' auto-description 'specify: %d'   # Manual recommendation

# Display lists of matches in different colors depending on file type
zmodload -i zsh/complist    # -i suppresses messages if the mod is already loaded
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}   # LS_COLORS --> use same colors as GNU ls

# Some fancy custom colors suggested in Zsh user guide
# zstyle ':completion:*:*:kill:*' list-colors '=%*=01;31' # Prints jobs (prefaced by %) in red
zstyle ':completion:*:*:kill:*:jobs' list-colors 'no=01;31' # Same, but preferred bc it's less dependent on output formatting from a single command
# zstyle ':completion:*:*:kill:*:processes' list-colors \
#     '=(#b) #([0-9]#)*=0=01;31'  # Colors the job IDs onl

# Ignore object, tilde-, and .dvi files in completion lists
zstyle ':completion:*:files' ignored-patterns '*?.o' '*?~' '*?.dvi'

# Ignore completion functions in completion lists
# Suggested by the manual and by the Zsh user guide
# zstyle ':completion:*:*:-command-:*' tag-order 'functions:-non-comp'
# More sophisticated version using patterns:
zstyle ':completion:*:*:-command-:*' tag-order 'functions:-non-comp:non-completion\ functions *' functions
zstyle ':completion:*:functions-non-comp' ignored-patterns '_*'

# Use menu completion when list is too long for the screen
zstyle ':completion:*' menu select=long-list

# Ensure that yq only completes files ending in .yaml or .yml
zstyle ':completion:*:*:yq:*:*' file-patterns '*.(y(|a)ml|json):yaml-files:YAML\ files'
zstyle ':completion:*:*:jq:*:*' file-patterns '*.json:json-files:JSON\ files'

# Provide the longest-possible unambiguous filepath match
zstyle ':completion:*' expand prefix suffix

# Completion matching rules
# - Case insensitivity and - <--> _ conversions
# - Independent completions of word blocks delimited by [._-]
#   - The ** wildcard here allows the anchor (delimiter) to appear any number of times
# - Partial word matching
#   - "Chunks" of words beginning with capitals or digits are treated as distinct, anchored substrings
# - Substring completion (last resort)
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|[._-]=** r:|=*' 'r:[^A-Z0-9]||[A-Z0-9]=** r:|=*' 'l:|=* r:|=*'

# Try case-insensitive matching for every command if normal matching fails
zstyle ':completion:*:*:foo:*' tag-order '*' '*:-case'
zstyle ':completion:*-case' matcher 'm:{a-z}={A-Z}'

# Suggested on fzf-tab GH page
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'
# Styles / completers to consider:
# - _oldlist: Insert into completers style before _complete

# Suggested in Zsh user guide:
# zstyle ':completion:*' completer _complete _approximate:-one \
#     _complete:-extended _approximate:-four
# zstyle ':completion:*:approximate-one:*' max-errors 1
# zstyle ':completion:*:complete-extended:*' \
#     matcher 'r:|[.,_-]=* r:|=*'
# zstyle ':completion:*:approximate-four:*' max-errors 4

autoload -Uz compinit
fpath+=~/.zfunc

# opam configuration
test -r /home/hactar/.opam/opam-init/init.zsh && . /home/hactar/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# direnv hooks
eval "$(direnv hook zsh)"

# pyenv
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
